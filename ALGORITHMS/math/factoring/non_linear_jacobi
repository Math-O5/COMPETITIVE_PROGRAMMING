{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"non_linear_jacobi","provenance":[],"authorship_tag":"ABX9TyNQnZDC8DEg9DiK1Sk44vto"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"iDnSFRm2tkio","colab_type":"text"},"source":["<h2>O método de Newton para sistemas não lineares</h2>\n"]},{"cell_type":"markdown","metadata":{"id":"cMLy9F53tx-s","colab_type":"text"},"source":["<h3>Gauss com pivoteamento.</h3>\n","<p>Busca transformar a diagonal da matriz em dominante selecionando os maiores elementos na linha.</p>\n","<p>Outra medida é o maior elemento elativo na linha.</p> "]},{"cell_type":"markdown","metadata":{"id":"PLcqMQ2cfbJ_","colab_type":"text"},"source":["```\n","  para i em (1, n):\n","    si = max(|Aij|)\n","\n","  para i em (1, n):\n","    rij = |Aij|/si\n","```"]},{"cell_type":"code","metadata":{"id":"R7URXbIBtdDO","colab_type":"code","colab":{}},"source":["import numpy as np"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GLFcfu9nteCp","colab_type":"code","colab":{}},"source":["def swapRow(A, i, j):\n","  if(len(A.shape) == 1):\n","    A[i], A[j] = A[j], A[i]\n","  else:\n","    tmp = np.copy(A[i, :])\n","    A[i, :] = np.copy(A[j, :])\n","    A[j, :] = np.copy(tmp[:])\n","  \n","def swapCol(A, i, j):\n","  if(len(A.shape) == 1):\n","    A[i], A[j] = A[j], A[i]\n","  else:\n","    tmp = np.copy(A[:, i])\n","    A[:, i] = np.copy(A[:, j])\n","    A[:, j] = np.copy(tmp[:])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8Sgc5-qXvz1T","colab_type":"code","colab":{}},"source":["def gaussPivot(A, b, tol=1.0e-9):\n","  # U decomposition for Ux = y \n","  # return [A|b] (matriz aumentada)\n","  n = len(b)\n","  s = np.zeros([n])\n","  for i in range(0, n):\n","    s[i] = np.max(np.abs(A[i, :]))\n","  \n","  #pivoteamento\n","  for k in np.arange(n-1):\n","    p = np.argmax(np.abs(A[k, k:n]/s[k:n]))\n","    # if(np.abs(A[p, k]) < tol):\n","    #   print('Matriz singular!')\n","    #   return -1\n","    if(p != k):\n","      swapRow(A, p, k)\n","      swapRow(b, p, k)\n","      swapRow(s, p, k)\n","\n","  #elimination\n","    for i in range(k+1, n):\n","      m = 0.0;\n","      if(A[i, k] != 0):\n","        m = A[i, k]/A[k, k]\n","        A[i, k+1:n] -= m*A[k, k+1:n];\n","        b[i] -= m*b[k]; \n","\n","  return [A, b]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dOy4-_VxHxGx","colab_type":"code","colab":{}},"source":["def backSubstituion(l, y): \n","  # Ux = y\n","  # return x is array size n\n","  n = len(y)\n","  for i in range(n-1, -1, -1):\n","    y[i] = (y[i] - np.dot(l[i,i+1:n], y[i+1:n]))/l[i, i];\n","  return y"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"34TMEaghJCZ-","colab_type":"text"},"source":["<h3>Testando</h3>"]},{"cell_type":"code","metadata":{"id":"Hbm9vPTlfu_x","colab_type":"code","outputId":"d08a4f9b-68c1-4eda-8e4e-7b29320d8b30","executionInfo":{"status":"ok","timestamp":1587569158880,"user_tz":180,"elapsed":718,"user":{"displayName":"Mathias Fernandes Duarte Coelho","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRLjnuys7WcEdIFDS5R6mjH1fLmA6pkbbMeUMquA=s64","userId":"17345795683512599129"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["A = np.array([[1, 1, 1],  \n","              [1, 0, 10],  \n","              [0,10, 1]], dtype='float64')\n","b = [0,-48,25]\n","\n","x_pivo = np.linalg.solve(A, b)\n","print(x_pivo)\n","\n","A, b = gaussPivot(A, b)\n","print(backSubstituion(A, b))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[ 2.  3. -5.]\n","[2.0, 3.0, -5.0]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"HsxUsptEHiTK","colab_type":"text"},"source":["```\n","X_k_new = X_k - Jacob(X_k) * F(X_k)\n","\n","Para simplicaficar a derivada da função, Jacob é calculado da seguinte forma:\n","\n","index(Jacob(X_k)[i, j] = F[i](X_k + erro*h) - F[i](X_k) / h\n","\n","h : passo\n","erro jth: X_k_new - X_k\n","```"]},{"cell_type":"code","metadata":{"id":"0N683EsML6Rv","colab_type":"code","colab":{}},"source":["def f(x):\n","  n = x.shape[0]\n","  f = np.zeros([n], dtype = 'float64')\n","  f[0] = (x[0]*x[0]) + (x[1]*x[1]) - 3\n","  f[1] = (x[0]*x[1]) - 1\n","  return f"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"23UG9PIwA19B","colab_type":"code","colab":{}},"source":["def newtonRapshon(f, x, tol = 1.0e-9):\n","  # F(X) = 0\n","  def jacobiano(f, x):\n","    #     | f1/dx  f1/dy  f1/dz |\n","    # J = | f2/dx  f2/dy  f2/dz |\n","    #     | f3/dx  f3/dy  f3/dz |\n","    h = 1.0e-4\n","    n = x.shape[0]\n","    jac = np.zeros([n, n], dtype='float64')\n","    f0 = f(x) # f0 = { f1(x), f2(x), ..., fn(x) }\n","    for i in np.arange(n):\n","      aux = x[i]\n","      x[i] = aux + h  # x = {x0, ..., xi + h, ..., xn } ; avança x na direção ith\n","      f1 = f(x)       # f1 = { f1/di, f2/di, ..., fn/di }\n","      x[i] = aux\n","      jac[:, i] = (f1 - f0) / h\n","    \n","    return jac, f0\n","  \n","  for i in np.arange(30):\n","    jac, f0 = jacobiano(f, x)\n","    if(np.sqrt(np.dot(f0, f0)) < tol):\n","      return x\n","    else:\n","      A, b = gaussPivot(jac, -f0)\n","      dx = backSubstituion(A, b)\n","      x = x + dx\n","      if(1.0 > np.max(np.abs(x))):\n","        y = 1.0\n","      else:\n","        y = np.max(np.abs(x))\n","      \n","      if(np.sqrt(np.dot(dx, dx)) < tol*y):\n","        return x\n","  print('The solution is far yet.')\n","  return -1"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IgHZOmqjUqeu","colab_type":"text"},"source":["```\n","Intersecção entre circulo e hipérbole:\n","f1(x, y) = x^2 + y^2 - 3 = 0\n","f2(x, y) = xy - 1 = 0\n","```"]},{"cell_type":"code","metadata":{"id":"EmEAsrs8VJoi","colab_type":"code","outputId":"0756252f-fd45-4fb8-8e90-1349ce265bad","executionInfo":{"status":"ok","timestamp":1587570785832,"user_tz":180,"elapsed":908,"user":{"displayName":"Mathias Fernandes Duarte Coelho","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRLjnuys7WcEdIFDS5R6mjH1fLmA6pkbbMeUMquA=s64","userId":"17345795683512599129"}},"colab":{"base_uri":"https://localhost:8080/","height":90}},"source":["from scipy.optimize import fsolve\n","import math\n","\n","x = np.array([0.5, 1.5], dtype='float64')\n","bad_guess = np.array([1.5, 2.5], dtype='float64')\n","print(newtonRapshon(f, np.copy(x)))\n","print(fsolve(f, x))\n","print(newtonRapshon(f, np.copy(bad_guess)))\n","print(fsolve(f, bad_guess))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[0.61803399 1.61803399]\n","[0.61803399 1.61803399]\n","[0.61803399 1.61803399]\n","[0.61803399 1.61803399]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YOG6xpZpVxZh","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}